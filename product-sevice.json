const fs = require('fs');
global.products = new Array();
global.categories = new Array();

function initialize()
 {
    return new Promise((response, reject) => {
        console.log("initialized: ", products, categories);
        fs.readFile('./data/products.json', 'utf-8', (err, data) => {
            console.log("d: ", data);
            if (err) reject(err);
            products.push(JSON.parse(data));
        });

        fs.readFile('./data/categories.json', 'utf-8', (err, data) => {
            console.log("ds: ", data);
            if (err) reject(err);
            categories.push(JSON.parse(data));
        });


    })
}


function getAllProducts() {
    return new Promise((resolve, reject) => {
        if (products && products.length > 0) {
            resolve(products)
        }
        else {
            reject("no results returned")
        }
    })
}

function getPublishedProducts() {
    return products((resolve, reject) => {
        if (products && products.length > 0) {
            resolve(products)
        }
        else {
            reject("no results returned")
        }
    })
}

function getCategories() {
    return new Promise((resolve, reject) => {
        if (categories && categories.length > 0) {
            resolve(categories)
        }
        else {
            reject("no results returned")
        }
    })
}

